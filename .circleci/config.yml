version: 2.1

orbs:
  slack: circleci/slack@4.10.1

jobs:
  install-project:
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Install bash, yarn and @nestjs/cli
          command: |
            apk add --no-cache bash
            apk add --no-cache yarn --repository="http://dl-cdn.alpinelinux.org/alpine/edge/community"
            yarn global add @nestjs/cli
      - run:
          name: Install project
          command: |
            yarn
      - save_cache:
          key: v1.1.0-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - backend/bff/node_modules
            - backend/users/node_modules
            - backend/profiles/node_modules
            - frontend/node_modules

  run-tests:
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Install bash, curl, yarn and @nestjs/cli
          command: |
            apk add --no-cache bash curl
            apk add --no-cache yarn --repository="http://dl-cdn.alpinelinux.org/alpine/edge/community"
            yarn global add @nestjs/cli
      - run:
          name: Run all tests
          command: |
            yarn test
      - slack/notify:
          template: basic_fail_1
          event: fail

  run-lint:
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Install bash, curl, yarn and @nestjs/cli
          command: |
            apk add --no-cache bash curl
            apk add --no-cache yarn --repository="http://dl-cdn.alpinelinux.org/alpine/edge/community"
            yarn global add @nestjs/cli
      - run:
          name: Run lint
          command: |
            yarn lint
      - slack/notify:
          template: basic_fail_1
          event: fail

  notify-success:
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Install bash, curl, yarn and @nestjs/cli
          command: |
            apk add --no-cache bash curl
            apk add --no-cache yarn --repository="http://dl-cdn.alpinelinux.org/alpine/edge/community"
            yarn global add @nestjs/cli
      - slack/notify:
          template: basic_success_1
          event: always

  release:
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Install bash, curl, git, yarn and @nestjs/cli
          command: |
            apk add --no-cache bash curl git
            apk add --no-cache yarn --repository="http://dl-cdn.alpinelinux.org/alpine/edge/community"
            yarn global add @nestjs/cli
      - run:
          name: Update version
          command: |
            npx semantic-release
      - slack/notify:
          template: basic_fail_1
          event: fail

  check-version:
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Install bash, curl, yarn and @nestjs/cli
          command: |
            apk add --no-cache bash curl
            apk add --no-cache yarn --repository="http://dl-cdn.alpinelinux.org/alpine/edge/community"
            yarn global add @nestjs/cli
      - run:
          name: Check version
          command: |
            echo Version $(npm pkg get version | sed 's/"//g')
      - slack/notify:
          template: basic_fail_1
          event: fail

workflows:
  default:
    jobs:
      - install-project
      - run-tests:
          requires: [install-project]
          context:
            - teste
      - run-lint:
          requires: [install-project]
          context:
            - teste
      - notify-success:
          requires: [run-tests, run-lint]
          context:
            - teste
          filters:
            branches:
              ignore: master
      - release:
          requires: [run-tests, run-lint]
          context:
            - teste
          filters:
            branches:
              only: master
      - check-version:
          requires: [release]
          context:
            - teste
          filters:
            branches:
              only: master
