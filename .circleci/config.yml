version: 2.1

orbs:
  slack: circleci/slack@4.10.1

jobs:
  install-project:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Install project
          command: |
            yarn
      - save_cache:
          key: v1.1.0-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - backend/bff/node_modules
            - backend/users/node_modules
            - backend/profiles/node_modules
            - frontend/node_modules

  run-tests:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Run all tests
          command: |
            make test
      - slack/notify:
          template: basic_fail_1
          event: fail

  run-lint:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Run lint
          command: |
            make lint
      - slack/notify:
          template: basic_fail_1
          event: fail

  notify-success:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - slack/notify:
          template: basic_success_1
          event: always

  update-version:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.1.0-deps-{{ checksum "yarn.lock" }}
            - v1.1.0-deps-
      - run:
          name: Save old version to file
          command: |
            echo "$(git describe --tags --abbrev=0)" > old_version.txt
            echo OLD_VERSION: $(cat old_version.txt)
      - run:
          name: Update version
          command: |
            npx semantic-release
      - persist_to_workspace:
          root: .
          paths:
            - old_version.txt
      - slack/notify:
          template: basic_fail_1
          event: fail

  build-images:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build and push Docker images
          command: |
            export NEW_VERSION=$(git describe --tags --abbrev=0)
            echo NEW_VERSION: $NEW_VERSION

            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USER --password-stdin

            make build-docker-images version=$NEW_VERSION
            make push-docker-images version=$NEW_VERSION
      - slack/notify:
          template: basic_fail_1
          event: fail

  create-k8s-green-deployment:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - run:
          name: Deploy images to k8s cluster
          command: |
            make create-k8s-deployment svc_env=green
      - slack/notify:
          template: basic_fail_1
          event: fail

  smoke-test-k8s-green-deployment:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - run:
          name: Perform smoke test
          command: |
            make smoke-test-k8s-green-deployment svc_env=green
      - slack/notify:
          template: basic_fail_1
          event: fail

  update-k8s-blue-deployment:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - run:
          name: Deploy images to k8s cluster
          command: |
            make update-k8s-service svc_env=blue
      - slack/notify:
          template: basic_fail_1
          event: fail

  cleanup-k8s-green-deployment:
    docker:
      - image: patrickcoutinho/cloud-devops-ci
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Deploy images to k8s cluster
          command: |
            make cleanup-k8s-green-deployment
      - slack/notify:
          template: basic_fail_1
          event: fail

workflows:
  integration:
    jobs:
      - install-project
      - run-tests:
          requires: [install-project]
          context:
            - teste
      - run-lint:
          requires: [install-project]
          context:
            - teste
      - notify-success:
          requires: [run-tests, run-lint]
          context:
            - teste
          filters:
            branches:
              ignore: master
      - update-version:
          requires: [run-tests, run-lint]
          context:
            - teste
          filters:
            branches:
              only: master

  deployment:
    jobs:
      - build-images:
          context:
            - teste
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - create-k8s-green-deployment:
          requires: [build-images]
          context:
            - teste
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - smoke-test-k8s-green-deployment:
          requires: [create-k8s-green-deployment]
          context:
            - teste
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - update-k8s-blue-deployment:
          requires: [smoke-test-k8s-green-deployment]
          context:
            - teste
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - cleanup-k8s-green-deployment:
          requires: [update-k8s-blue-deployment]
          context:
            - teste
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
